{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.scss","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/etl-page/etl-page.component.html","webpack:///./src/app/components/etl-page/etl-page.component.scss","webpack:///./src/app/components/etl-page/etl-page.component.ts","webpack:///./src/app/components/hosts-page/hosts-page.component.html","webpack:///./src/app/components/hosts-page/hosts-page.component.scss","webpack:///./src/app/components/hosts-page/hosts-page.component.ts","webpack:///./src/app/components/layout/components/header-menu/header-menu.component.html","webpack:///./src/app/components/layout/components/header-menu/header-menu.component.scss","webpack:///./src/app/components/layout/components/header-menu/header-menu.component.ts","webpack:///./src/app/components/layout/layout.component.html","webpack:///./src/app/components/layout/layout.component.scss","webpack:///./src/app/components/layout/layout.component.ts","webpack:///./src/app/components/monitoring-etl/monitoring-etl.component.html","webpack:///./src/app/components/monitoring-etl/monitoring-etl.component.scss","webpack:///./src/app/components/monitoring-etl/monitoring-etl.component.ts","webpack:///./src/app/components/monitoring-etl/monitoring-etl.service.ts","webpack:///./src/app/components/monitoring-hosts/monitoring-hosts.component.html","webpack:///./src/app/components/monitoring-hosts/monitoring-hosts.component.scss","webpack:///./src/app/components/monitoring-hosts/monitoring-hosts.component.ts","webpack:///./src/app/components/monitoring-hosts/monitoring-hosts.service.ts","webpack:///./src/app/components/monitoring-services/monitoring-services.component.html","webpack:///./src/app/components/monitoring-services/monitoring-services.component.scss","webpack:///./src/app/components/monitoring-services/monitoring-services.component.ts","webpack:///./src/app/components/monitoring-services/monitoring-services.service.ts","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.scss","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/services-page/services-page.component.html","webpack:///./src/app/components/services-page/services-page.component.scss","webpack:///./src/app/components/services-page/services-page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-layout></app-layout>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Dashboard';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DxDataGridModule, DxBulletModule, DxTemplateModule } from 'devextreme-angular';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HttpClientModule }   from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { HeaderMenuComponent } from './components/layout/components/header-menu/header-menu.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { MonitoringEtlComponent } from './components/monitoring-etl/monitoring-etl.component';\nimport { MonitoringHostsComponent } from './components/monitoring-hosts/monitoring-hosts.component';\nimport { MonitoringServicesComponent } from './components/monitoring-services/monitoring-services.component';\nimport { EtlPageComponent } from './components/etl-page/etl-page.component';\nimport { HostsPageComponent } from './components/hosts-page/hosts-page.component';\nimport { ServicesPageComponent } from './components/services-page/services-page.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: DashboardComponent,\n    data: {\n      title: 'Dashboard'\n    }\n  },\n  {\n    path: 'etl',\n    pathMatch: 'full',\n    component: EtlPageComponent,\n    data: {\n      title: 'ETL processes'\n    }\n  },\n  {\n    path: 'hosts',\n    pathMatch: 'full',\n    component: HostsPageComponent,\n    data: {\n      title: 'Hosts'\n    }\n  },\n  {\n    path: 'services',\n    pathMatch: 'full',\n    component: ServicesPageComponent,\n    data: {\n      title: 'Services'\n    }\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    HeaderMenuComponent,\n    DashboardComponent,\n    NotFoundComponent,\n    MonitoringEtlComponent,\n    MonitoringHostsComponent,\n    MonitoringServicesComponent,\n    EtlPageComponent,\n    HostsPageComponent,\n    ServicesPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    DxDataGridModule,\n    DxBulletModule,\n    DxTemplateModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"dashboard-block\\\">\\n  <h2>ETL processes</h2>\\n  <app-monitoring-etl></app-monitoring-etl>\\n</div>\\n<div class=\\\"dashboard-block\\\">\\n  <h2>Hosts</h2>\\n  <app-monitoring-hosts></app-monitoring-hosts>\\n</div>\\n<div class=\\\"dashboard-block\\\">\\n  <h2>Services</h2>\\n  <app-monitoring-services></app-monitoring-services>\\n</div>\"","module.exports = \".dashboard-block {\\n  margin-bottom: 30px; }\\n  .dashboard-block:last-child {\\n    margin-bottom: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1>ETL processes</h1>\\n<app-monitoring-etl></app-monitoring-etl>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-etl-page',\n  templateUrl: './etl-page.component.html',\n  styleUrls: ['./etl-page.component.scss']\n})\nexport class EtlPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1>Hosts</h1>\\n<app-monitoring-hosts></app-monitoring-hosts>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hosts-page',\n  templateUrl: './hosts-page.component.html',\n  styleUrls: ['./hosts-page.component.scss']\n})\nexport class HostsPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"header-menu\\\">\\n  <ul class=\\\"header-menu__list\\\">\\n    <li class=\\\"header-menu__item\\\">\\n      <a routerLink=\\\"/\\\" routerLinkActive=\\\"header-menu__link--active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" class=\\\"header-menu__link\\\">Dashboard</a>\\n    </li>\\n    <li class=\\\"header-menu__item\\\">\\n      <a routerLink=\\\"/etl\\\" routerLinkActive=\\\"header-menu__link--active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" class=\\\"header-menu__link\\\">ETL processes</a>\\n    </li>\\n    <li class=\\\"header-menu__item\\\">\\n      <a routerLink=\\\"/hosts\\\" routerLinkActive=\\\"header-menu__link--active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" class=\\\"header-menu__link\\\">Hosts</a>\\n    </li>\\n    <li class=\\\"header-menu__item\\\">\\n      <a routerLink=\\\"/services\\\" routerLinkActive=\\\"header-menu__link--active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" class=\\\"header-menu__link\\\">Services</a>\\n    </li>\\n  </ul>\\n</div>\\n\"","module.exports = \".header-menu__list {\\n  display: flex;\\n  margin: auto;\\n  padding: 0;\\n  list-style: none; }\\n\\n.header-menu__item {\\n  margin-right: 35px; }\\n\\n.header-menu__item:last-child {\\n    margin-right: 0; }\\n\\n.header-menu__link {\\n  color: #fff; }\\n\\n.header-menu__link--active {\\n    text-decoration: none; }\\n\\n@media (max-width: 768px) {\\n  .header-menu__list {\\n    display: block;\\n    margin: 10px 0; }\\n  .header-menu__item {\\n    margin: 0 0 15px; }\\n    .header-menu__item:last-child {\\n      margin-bottom: 0; } }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-menu',\n  templateUrl: './header-menu.component.html',\n  styleUrls: ['./header-menu.component.scss']\n})\nexport class HeaderMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"layout\\\">\\n  <div class=\\\"layout__header-wrapper\\\">\\n    <div class=\\\"layout__header\\\">\\n      <div class=\\\"layout__logo\\\">Monitoring</div>\\n      <app-header-menu class=\\\"layout__header-menu\\\"></app-header-menu>\\n    </div>\\n  </div>\\n  <div class=\\\"layout__content-wrapper\\\">\\n    <div class=\\\"layout__content\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".layout {\\n  min-width: 320px; }\\n  .layout__header-wrapper {\\n    display: flex;\\n    justify-content: center;\\n    margin-bottom: 15px;\\n    background-color: #00897b;\\n    color: #fff; }\\n  .layout__header {\\n    display: flex;\\n    align-items: center;\\n    width: 100%;\\n    max-width: 1000px;\\n    padding: 5px 0;\\n    margin: 0 15px; }\\n  .layout__logo {\\n    margin-right: 70px;\\n    font-size: 30px;\\n    line-height: 40px; }\\n  .layout__content-wrapper {\\n    display: flex;\\n    justify-content: center;\\n    margin: 0 15px 15px; }\\n  .layout__content {\\n    padding: 15px;\\n    width: 100%;\\n    max-width: 1000px;\\n    border-radius: 2px;\\n    background: #fff;\\n    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\\n  @media (max-width: 768px) {\\n  .layout__header {\\n    display: block; } }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<dx-data-grid\\n  id=\\\"etlGrid\\\"\\n  [dataSource]=\\\"data\\\"\\n  [columnHidingEnabled]=\\\"true\\\"\\n  [columns]=\\\"['name', 'isWork', 'isError', 'lastStartDate', 'lastErrorDate', 'lastErrorMessage']\\\"\\n  [showBorders]=\\\"true\\\">\\n\\n  <dxo-editing \\n    mode=\\\"cell\\\"\\n    [allowUpdating]=\\\"true\\\">\\n  </dxo-editing>\\n\\n  <dxo-paging [pageSize]=\\\"10\\\"></dxo-paging>\\n\\n  <dxi-column dataField=\\\"name\\\" caption=\\\"Name\\\" [allowEditing]=\\\"false\\\"></dxi-column>\\n  <dxi-column dataField=\\\"isWork\\\" caption=\\\"On / Off\\\"></dxi-column>\\n  <dxi-column dataField=\\\"isError\\\" caption=\\\"Error\\\" [allowEditing]=\\\"false\\\"></dxi-column>\\n  <dxi-column dataField=\\\"lastStartDate\\\" caption=\\\"Last start date\\\" dataType=\\\"date\\\" format=\\\"dd.MM.yyyy\\\" [allowEditing]=\\\"false\\\"></dxi-column>\\n  <dxi-column dataField=\\\"lastErrorDate\\\" caption=\\\"Last error date\\\" dataType=\\\"date\\\" format=\\\"dd.MM.yyyy\\\" [allowEditing]=\\\"false\\\"></dxi-column>\\n  <dxi-column dataField=\\\"lastErrorMessage\\\" caption=\\\"Last error message\\\" [allowEditing]=\\\"false\\\"></dxi-column>\\n\\n</dx-data-grid>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Data, Service } from './monitoring-etl.service';\n\n@Component({\n  selector: 'app-monitoring-etl',\n  templateUrl: './monitoring-etl.component.html',\n  styleUrls: ['./monitoring-etl.component.scss'],\n  providers: [Service],\n})\nexport class MonitoringEtlComponent implements OnInit {\n\n  data: Data[];\n\n  constructor(private service: Service) {}\n\n  ngOnInit() {\n    this.service.getData().subscribe(data => this.data = data);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport class Data {\r\n  name: string;\r\n  isWork: boolean;\r\n  isError: boolean;\r\n  lastStartDate: string;\r\n  lastErrorDate: string;\r\n  lastErrorMessage: string;\r\n}\r\n   \r\n@Injectable()\r\nexport class Service {\r\n    constructor(private http: HttpClient) {}\r\n       \r\n    getData(): Observable<Data[]> {\r\n      return this.http.get(`${environment.apiUrl}/etl`).pipe(map(res => {\r\n        return res['data'];\r\n      }));\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"hosts-grid\\\">\\n  <div class=\\\"hosts-grid__inner\\\">\\n    <dx-data-grid\\n      rowTemplate=\\\"warningRowTemplate\\\"\\n      [dataSource]=\\\"data\\\"\\n      [columns]=\\\"['name', 'cpu', 'memory', 'freeDiskSpace', 'fullDiskSpace']\\\"\\n      [showBorders]=\\\"true\\\">\\n\\n      <dxi-column dataField=\\\"name\\\" caption=\\\"Name\\\"></dxi-column>\\n      <dxi-column dataField=\\\"cpu\\\" caption=\\\"CPU\\\" dataType=\\\"number\\\"></dxi-column>\\n      <dxi-column dataField=\\\"memory\\\" caption=\\\"Memory\\\" dataType=\\\"number\\\"></dxi-column>\\n      <dxi-column dataField=\\\"freeDiskSpace\\\" caption=\\\"Free disk space\\\" dataType=\\\"number\\\"></dxi-column>\\n      <dxi-column dataField=\\\"fullDiskSpace\\\" caption=\\\"Full disk space\\\" dataType=\\\"number\\\"></dxi-column>\\n\\n      <tbody class=\\\"dx-row custom-table\\\" *dxTemplate=\\\"let item of 'warningRowTemplate'\\\">\\n        <tr class=\\\"custom-table__row\\\" [ngClass]=\\\"{'custom-table__row--warning': (item.data.cpu >= 0.8 || item.data.memory >= 0.8)}\\\">\\n          <td [ngStyle]=\\\"{borderRight: '1px solid #dedede'}\\\">{{item.data.name}}</td>\\n          <td [ngStyle]=\\\"{borderRight: '1px solid #dedede'}\\\">\\n            <ng-container *ngTemplateOutlet=\\\"bullet; context: {value: item.data.cpu}\\\"></ng-container>\\n          </td>\\n          <td [ngStyle]=\\\"{borderRight: '1px solid #dedede'}\\\">\\n            <ng-container *ngTemplateOutlet=\\\"bullet; context: {value: item.data.memory}\\\"></ng-container>\\n          </td>\\n          <td [ngStyle]=\\\"{textAlign: 'right', borderRight: '1px solid #dedede'}\\\">{{item.data.freeDiskSpace}}</td>\\n          <td [ngStyle]=\\\"{textAlign: 'right'}\\\">{{item.data.fullDiskSpace}}</td>\\n        </tr>\\n      </tbody>\\n\\n      <ng-template #bullet let-value=\\\"value\\\">\\n        <div class=\\\"chart-cell\\\">\\n          <dx-bullet\\n            [showTarget]=\\\"false\\\"\\n            [showZeroLevel]=\\\"true\\\"\\n            [startScaleValue]=\\\"0\\\"\\n            [endScaleValue]=\\\"100\\\"\\n            [value]=\\\"value * 100\\\">\\n            <dxo-size [width]=\\\"150\\\" [height]=\\\"35\\\"></dxo-size>\\n            <dxo-tooltip\\n              [enabled]=\\\"true\\\"\\n              [paddingTopBottom]=\\\"2\\\"\\n              [customizeTooltip]=\\\"customizeTooltip\\\">\\n              <dxo-font [size]=\\\"18\\\"></dxo-font>\\n            </dxo-tooltip>\\n            <dxo-margin\\n                [top]=\\\"5\\\"\\n                [bottom]=\\\"0\\\"\\n                [left]=\\\"5\\\"\\n            ></dxo-margin>\\n          </dx-bullet>\\n        </div>\\n      </ng-template>\\n\\n    </dx-data-grid>\\n  </div>\\n</div>\"","module.exports = \"::ng-deep .dx-datagrid .dx-data-row > td.bullet {\\n  padding-top: 0;\\n  padding-bottom: 0; }\\n\\n.hosts-grid {\\n  width: 100%;\\n  overflow-x: auto;\\n  overflow-y: none; }\\n\\n.hosts-grid__inner {\\n    min-width: 800px; }\\n\\n.custom-table__row--warning {\\n  background-color: #f9bdb6; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Data, Service } from './monitoring-hosts.service';\n\n@Component({\n  selector: 'app-monitoring-hosts',\n  templateUrl: './monitoring-hosts.component.html',\n  styleUrls: ['./monitoring-hosts.component.scss'],\n  providers: [Service],\n})\nexport class MonitoringHostsComponent implements OnInit {\n\n  data: Data[];\n\n  constructor(private service: Service) {}\n\n  ngOnInit() {\n    this.service.getData().subscribe(data => this.data = data);\n  }\n\n  customizeTooltip = (pointsInfo) => {\n    return { text: parseInt(pointsInfo.originalValue) + \"%\" };\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport class Data {\r\n  name: string;\r\n  isWork: boolean;\r\n  isError: boolean;\r\n  lastStartDate: string;\r\n  lastErrorDate: string;\r\n  lastErrorMessage: string;\r\n}\r\n   \r\n@Injectable()\r\nexport class Service {\r\n    constructor(private http: HttpClient) {}\r\n       \r\n    getData(): Observable<Data[]> {\r\n      return this.http.get(`${environment.apiUrl}/hosts`).pipe(map(res => {\r\n        return res['data'];\r\n      }));\r\n    }\r\n}\r\n","module.exports = \"<dx-data-grid\\n  id=\\\"etlGrid\\\"\\n  [dataSource]=\\\"data\\\"\\n  [columnHidingEnabled]=\\\"true\\\"\\n  [columns]=\\\"['name', 'tags', 'status', 'releaseVersion']\\\"\\n  [showBorders]=\\\"true\\\">\\n\\n  <dxo-paging [pageSize]=\\\"10\\\"></dxo-paging>\\n\\n  <dxo-group-panel [visible]=\\\"true\\\"></dxo-group-panel>\\n\\n  <dxi-column dataField=\\\"name\\\" caption=\\\"Name\\\"></dxi-column>\\n  <dxi-column dataField=\\\"tags\\\" caption=\\\"Tags\\\"></dxi-column>\\n  <dxi-column dataField=\\\"status\\\" caption=\\\"Status\\\"></dxi-column>\\n  <dxi-column dataField=\\\"releaseVersion\\\" caption=\\\"Release version\\\"></dxi-column>\\n\\n</dx-data-grid>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Data, Service } from './monitoring-services.service';\n\n@Component({\n  selector: 'app-monitoring-services',\n  templateUrl: './monitoring-services.component.html',\n  styleUrls: ['./monitoring-services.component.scss'],\n  providers: [Service],\n})\nexport class MonitoringServicesComponent implements OnInit {\n\n  data: Data[];\n\n  constructor(private service: Service) {}\n\n  ngOnInit() {\n    this.service.getData().subscribe(data => this.data = data);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport class Data {\r\n  name: string;\r\n  isWork: boolean;\r\n  isError: boolean;\r\n  lastStartDate: string;\r\n  lastErrorDate: string;\r\n  lastErrorMessage: string;\r\n}\r\n   \r\n@Injectable()\r\nexport class Service {\r\n    constructor(private http: HttpClient) {}\r\n       \r\n    getData(): Observable<Data[]> {\r\n      return this.http.get(`${environment.apiUrl}/services`).pipe(map(res => {\r\n        return res['data'];\r\n      }));\r\n    }\r\n}\r\n","module.exports = \"<p>\\n  404 Not Found\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1>Services</h1>\\n<app-monitoring-services></app-monitoring-services>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-services-page',\n  templateUrl: './services-page.component.html',\n  styleUrls: ['./services-page.component.scss']\n})\nexport class ServicesPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3001/api',\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}